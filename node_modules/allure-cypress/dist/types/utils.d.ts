import { Status } from "allure-js-commons";
import type { CypressCommand, HookType } from "./model.js";
export declare const uint8ArrayToBase64: (data: unknown) => string;
export declare const getSuitePath: (test: Mocha.Test) => string[];
export declare const shouldCommandBeSkipped: (command: CypressCommand) => boolean;
export declare const toReversed: <T = unknown>(arr: T[]) => T[];
export declare const isGlobalHook: (hookName: string) => boolean;
export declare const last: <T = unknown>(arr: T[]) => T | undefined;
export declare const getNamesAndLabels: (spec: Cypress.Spec, test: Mocha.Test) => {
    name: string;
    labels: import("allure-js-commons").Label[];
    fullName: string;
};
export declare const applyTestPlan: (spec: Cypress.Spec, root: Mocha.Suite) => void;
export declare const resolveStatusWithDetails: (error: Error | undefined) => {
    status: Status;
    statusDetails: Pick<import("allure-js-commons").StatusDetails, "message" | "trace">;
} | {
    status: Status;
    statusDetails?: undefined;
};
export declare const markTestAsReported: (test: Mocha.Test) => void;
export declare const isTestReported: (test: Mocha.Test) => boolean;
export declare const getHookType: (name: string) => HookType | [];
